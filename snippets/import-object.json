{

  "Ember.Object": {
    "prefix": "imobject",
    "body": [
      "import EmberObject from '@ember/object';"
    ],
    "description": "Ember module"
  },

  "Ember.ObjectProxy": {
    "prefix": "imobjectProxy",
    "body": [
      "import ObjectProxy from '@ember/object/proxy';"
    ],
    "description": "Ember module"
  },

  "Ember.Observable": {
    "prefix": "imobservable",
    "body": [
      "import Observable from '@ember/object/observable';"
    ],
    "description": "Ember module"
  },

  "Ember.addListener": {
    "prefix": "imaddListener",
    "body": [
      "import { addListener } from '@ember/object/events';"
    ],
    "description": "Ember module"
  },

  "Ember.addObserver": {
    "prefix": "imaddObserver",
    "body": [
      "import { addObserver } from '@ember/object/observers';"
    ],
    "description": "Ember module"
  },

  "Ember.aliasMethod": {
    "prefix": "imaliasMethod",
    "body": [
      "import { aliasMethod } from '@ember/object';"
    ],
    "description": "Ember module"
  },

  "Ember.computed": {
    "prefix": "imcomputed",
    "body": [
      "import { computed } from '@ember/object';"
    ],
    "description": "Ember module"
  },

  "Ember.computed.alias": {
    "prefix": "imalias",
    "body": [
      "import { alias } from '@ember/object/computed';"
    ],
    "description": "Ember module"
  },

  "Ember.computed.and": {
    "prefix": "imand",
    "body": [
      "import { and } from '@ember/object/computed';"
    ],
    "description": "Ember module"
  },

  "Ember.computed.bool": {
    "prefix": "imbool",
    "body": [
      "import { bool } from '@ember/object/computed';"
    ],
    "description": "Ember module"
  },

  "Ember.computed.collect": {
    "prefix": "imcollect",
    "body": [
      "import { collect } from '@ember/object/computed';"
    ],
    "description": "Ember module"
  },

  "Ember.computed.deprecatingAlias": {
    "prefix": "imdeprecatingAlias",
    "body": [
      "import { deprecatingAlias } from '@ember/object/computed';"
    ],
    "description": "Ember module"
  },

  "Ember.computed.empty": {
    "prefix": "imempty",
    "body": [
      "import { empty } from '@ember/object/computed';"
    ],
    "description": "Ember module"
  },

  "Ember.computed.equal": {
    "prefix": "imequal",
    "body": [
      "import { equal } from '@ember/object/computed';"
    ],
    "description": "Ember module"
  },

  "Ember.computed.filter": {
    "prefix": "imfilter",
    "body": [
      "import { filter } from '@ember/object/computed';"
    ],
    "description": "Ember module"
  },

  "Ember.computed.filterBy": {
    "prefix": "imfilterBy",
    "body": [
      "import { filterBy } from '@ember/object/computed';"
    ],
    "description": "Ember module"
  },

  "Ember.computed.filterProperty": {
    "prefix": "imfilterProperty",
    "body": [
      "import { filterProperty } from '@ember/object/computed';"
    ],
    "description": "Ember module"
  },

  "Ember.computed.gt": {
    "prefix": "imgt",
    "body": [
      "import { gt } from '@ember/object/computed';"
    ],
    "description": "Ember module"
  },

  "Ember.computed.gte": {
    "prefix": "imgte",
    "body": [
      "import { gte } from '@ember/object/computed';"
    ],
    "description": "Ember module"
  },

  "Ember.computed.intersect": {
    "prefix": "imintersect",
    "body": [
      "import { intersect } from '@ember/object/computed';"
    ],
    "description": "Ember module"
  },

  "Ember.computed.lt": {
    "prefix": "imlt",
    "body": [
      "import { lt } from '@ember/object/computed';"
    ],
    "description": "Ember module"
  },

  "Ember.computed.lte": {
    "prefix": "imlte",
    "body": [
      "import { lte } from '@ember/object/computed';"
    ],
    "description": "Ember module"
  },

  "Ember.computed.map": {
    "prefix": "immap",
    "body": [
      "import { map } from '@ember/object/computed';"
    ],
    "description": "Ember module"
  },

  "Ember.computed.mapBy": {
    "prefix": "immapBy",
    "body": [
      "import { mapBy } from '@ember/object/computed';"
    ],
    "description": "Ember module"
  },

  "Ember.computed.mapProperty": {
    "prefix": "immapProperty",
    "body": [
      "import { mapProperty } from '@ember/object/computed';"
    ],
    "description": "Ember module"
  },

  "Ember.computed.match": {
    "prefix": "immatch",
    "body": [
      "import { match } from '@ember/object/computed';"
    ],
    "description": "Ember module"
  },

  "Ember.computed.max": {
    "prefix": "immax",
    "body": [
      "import { max } from '@ember/object/computed';"
    ],
    "description": "Ember module"
  },

  "Ember.computed.min": {
    "prefix": "immin",
    "body": [
      "import { min } from '@ember/object/computed';"
    ],
    "description": "Ember module"
  },

  "Ember.computed.none": {
    "prefix": "imnone",
    "body": [
      "import { none } from '@ember/object/computed';"
    ],
    "description": "Ember module"
  },

  "Ember.computed.not": {
    "prefix": "imnot",
    "body": [
      "import { not } from '@ember/object/computed';"
    ],
    "description": "Ember module"
  },

  "Ember.computed.notEmpty": {
    "prefix": "imnotEmpty",
    "body": [
      "import { notEmpty } from '@ember/object/computed';"
    ],
    "description": "Ember module"
  },

  "Ember.computed.oneWay": {
    "prefix": "imoneWay",
    "body": [
      "import { oneWay } from '@ember/object/computed';"
    ],
    "description": "Ember module"
  },

  "Ember.computed.or": {
    "prefix": "imor",
    "body": [
      "import { or } from '@ember/object/computed';"
    ],
    "description": "Ember module"
  },

  "Ember.computed.readOnly": {
    "prefix": "imreadOnly",
    "body": [
      "import { readOnly } from '@ember/object/computed';"
    ],
    "description": "Ember module"
  },

  "Ember.computed.reads": {
    "prefix": "imreads",
    "body": [
      "import { reads } from '@ember/object/computed';"
    ],
    "description": "Ember module"
  },

  "Ember.computed.setDiff": {
    "prefix": "imsetDiff",
    "body": [
      "import { setDiff } from '@ember/object/computed';"
    ],
    "description": "Ember module"
  },

  "Ember.computed.sort": {
    "prefix": "imsort",
    "body": [
      "import { sort } from '@ember/object/computed';"
    ],
    "description": "Ember module"
  },

  "Ember.computed.sum": {
    "prefix": "imsum",
    "body": [
      "import { sum } from '@ember/object/computed';"
    ],
    "description": "Ember module"
  },

  "Ember.computed.union": {
    "prefix": "imunion",
    "body": [
      "import { union } from '@ember/object/computed';"
    ],
    "description": "Ember module"
  },

  "Ember.computed.uniq": {
    "prefix": "imuniq",
    "body": [
      "import { uniq } from '@ember/object/computed';"
    ],
    "description": "Ember module"
  },

  "Ember.computed.uniqBy": {
    "prefix": "imuniqBy",
    "body": [
      "import { uniqBy } from '@ember/object/computed';"
    ],
    "description": "Ember module"
  },

  "Ember.copy": {
    "prefix": "imcopy",
    "body": [
      "import { copy } from '@ember/object/internals';"
    ],
    "description": "Ember module"
  },

  "Ember.create": {
    "prefix": "impolyfillCreate",
    "body": [
      "import { create } from '@ember/polyfills';"
    ],
    "description": "Ember module"
  },

  "Ember.defineProperty": {
    "prefix": "imobjecDefineProperty",
    "body": [
      "import { defineProperty } from '@ember/object';"
    ],
    "description": "Ember module"
  },

  "Ember.get": {
    "prefix": "imget",
    "body": [
      "import { get } from '@ember/object';"
    ],
    "description": "Ember module"
  },

  "Ember.getProperties": {
    "prefix": "imgetProperties",
    "body": [
      "import { getProperties } from '@ember/object';"
    ],
    "description": "Ember module"
  },

  "Ember.getWithDefault": {
    "prefix": "imgetWithDefault",
    "body": [
      "import { getWithDefault } from '@ember/object';"
    ],
    "description": "Ember module"
  },

  "Ember.guidFor": {
    "prefix": "imguidFor",
    "body": [
      "import { guidFor } from '@ember/object/internals';"
    ],
    "description": "Ember module"
  },

  "Ember.observer": {
    "prefix": "imobserver",
    "body": [
      "import { observer } from '@ember/object';"
    ],
    "description": "Ember module"
  },

  "Ember.on": {
    "prefix": "imon",
    "body": [
      "import { on } from '@ember/object/evented';"
    ],
    "description": "Ember module"
  },

  "Ember.removeListener": {
    "prefix": "imremoveListener",
    "body": [
      "import { removeListener } from '@ember/object/events';"
    ],
    "description": "Ember module"
  },

  "Ember.removeObserver": {
    "prefix": "imremoveObserver",
    "body": [
      "import { removeObserver } from '@ember/object/observers';"
    ],
    "description": "Ember module"
  },

  "Ember.sendEvent": {
    "prefix": "imsendEvent",
    "body": [
      "import { sendEvent } from '@ember/object/events';"
    ],
    "description": "Ember module"
  },

  "Ember.set": {
    "prefix": "imset",
    "body": [
      "import { set } from '@ember/object';"
    ],
    "description": "Ember module"
  },

  "Ember.setProperties": {
    "prefix": "imsetProperties",
    "body": [
      "import { setProperties } from '@ember/object';"
    ],
    "description": "Ember module"
  },

  "Ember.trySet": {
    "prefix": "imtrySet",
    "body": [
      "import { trySet } from '@ember/object';"
    ],
    "description": "Ember module"
  },

  "Ember.ComputedProperty": {
    "prefix": "imcomputedProperty",
    "body": [
      "import ComputedProperty from '@ember/object/computed';"
    ],
    "description": "Ember module"
  },

  "Ember.CoreObject": {
    "prefix": "imcoreObject",
    "body": [
      "import CoreObject from '@ember/object/core';"
    ],
    "description": "Ember module"
  },

  "Ember.Evented": {
    "prefix": "imevented",
    "body": [
      "import Evented from '@ember/object/evented';"
    ],
    "description": "Ember module"
  },

  "Ember.Mixin": {
    "prefix": "immixin",
    "body": [
      "import Mixin from '@ember/object/mixin';"
    ],
    "description": "Ember module"
  },

  "Ember.PromiseProxyMixin": {
    "prefix": "impromiseProxyMixin",
    "body": [
      "import PromiseProxyMixin from '@ember/object/promise-proxy-mixin';"
    ],
    "description": "Ember module"
  },

  "Ember.cacheFor": {
    "prefix": "imcacheFor",
    "body": [
      "import { cacheFor } from '@ember/object/internals';"
    ],
    "description": "Ember module"
  }

}